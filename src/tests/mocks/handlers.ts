import { rest } from 'msw'

export const weatherData = {
  coord: {
    lon: 10.99,
    lat: 44.34,
  },
  weather: [
    {
      id: 501,
      main: 'Rain',
      description: 'moderate rain',
      icon: '10d',
    },
  ],
  base: 'stations',
  main: {
    temp: 298.48,
    feels_like: 298.74,
    temp_min: 297.56,
    temp_max: 300.05,
    pressure: 1015,
    humidity: 64,
    sea_level: 1015,
    grnd_level: 933,
  },
  visibility: 10000,
  wind: {
    speed: 0.62,
    deg: 349,
    gust: 1.18,
  },
  rain: {
    '1h': 3.16,
  },
  clouds: {
    all: 100,
  },
  dt: 1661870592,
  sys: {
    type: 2,
    id: 2075663,
    country: 'IT',
    sunrise: 1661834187,
    sunset: 1661882248,
  },
  timezone: 7200,
  id: 3163858,
  name: 'Zocca',
  cod: 200,
}

const directs = [
  {
    name: 'London',
    local_names: {
      wo: 'Londar',
      am: 'ለንደን',
      gl: 'Londres',
      oc: 'Londres',
      vo: 'London',
      de: 'London',
      kk: 'Лондон',
      sh: 'London',
      st: 'London',
      da: 'London',
      ie: 'London',
      fi: 'Lontoo',
      gv: 'Lunnin',
      fy: 'Londen',
      ab: 'Лондон',
      ta: 'இலண்டன்',
      he: 'לונדון',
      sc: 'Londra',
      lo: 'ລອນດອນ',
      ca: 'Londres',
      no: 'London',
      cy: 'Llundain',
      pl: 'Londyn',
      ne: 'लन्डन',
      bs: 'London',
      nl: 'Londen',
      rm: 'Londra',
      uk: 'Лондон',
      fr: 'Londres',
      bg: 'Лондон',
      sd: 'لنڊن',
      tl: 'Londres',
      ja: 'ロンドン',
      hu: 'London',
      lt: 'Londonas',
      sl: 'London',
      eo: 'Londono',
      br: 'Londrez',
      bo: 'ལོན་ཊོན།',
      av: 'Лондон',
      tt: 'Лондон',
      ku: 'London',
      ky: 'Лондон',
      yi: 'לאנדאן',
      ig: 'London',
      nv: 'Tooh Dineʼé Bikin Haalʼá',
      sk: 'Londýn',
      az: 'London',
      ko: '런던',
      hy: 'Լոնդոն',
      ps: 'لندن',
      ar: 'لندن',
      ascii: 'London',
      sr: 'Лондон',
      km: 'ឡុងដ៍',
      es: 'Londres',
      an: 'Londres',
      bn: 'লন্ডন',
      eu: 'Londres',
      li: 'Londe',
      mg: 'Lôndôna',
      cv: 'Лондон',
      gu: 'લંડન',
      bm: 'London',
      id: 'London',
      kw: 'Loundres',
      sa: 'लन्डन्',
      kv: 'Лондон',
      lb: 'London',
      cs: 'Londýn',
      kl: 'London',
      hr: 'London',
      bi: 'London',
      feature_name: 'London',
      ia: 'London',
      ce: 'Лондон',
      ml: 'ലണ്ടൻ',
      wa: 'Londe',
      ur: 'علاقہ لندن',
      it: 'Londra',
      ru: 'Лондон',
      el: 'Λονδίνο',
      os: 'Лондон',
      om: 'Landan',
      pa: 'ਲੰਡਨ',
      so: 'London',
      lv: 'Londona',
      ha: 'Landan',
      fo: 'London',
      mn: 'Лондон',
      fa: 'لندن',
      or: 'ଲଣ୍ଡନ',
      ln: 'Lóndɛlɛ',
      mt: 'Londra',
      th: 'ลอนดอน',
      vi: 'Luân Đôn',
      sm: 'Lonetona',
      tk: 'London',
      ga: 'Londain',
      tw: 'London',
      co: 'Londra',
      se: 'London',
      zh: '伦敦',
      ny: 'London',
      mk: 'Лондон',
      yo: 'Lọndọnu',
      pt: 'Londres',
      fj: 'Lodoni',
      sw: 'London',
      gn: 'Lóndyre',
      qu: 'London',
      be: 'Лондан',
      en: 'London',
      af: 'Londen',
      to: 'Lonitoni',
      sv: 'London',
      bh: 'लंदन',
      sn: 'London',
      uz: 'London',
      ee: 'London',
      ug: 'لوندۇن',
      sq: 'Londra',
      zu: 'ILondon',
      mr: 'लंडन',
      ka: 'ლონდონი',
      nn: 'London',
      ms: 'London',
      my: 'လန်ဒန်မြို့',
      jv: 'London',
      mi: 'Rānana',
      cu: 'Лондонъ',
      su: 'London',
      ff: 'London',
      ba: 'Лондон',
      si: 'ලන්ඩන්',
      tr: 'Londra',
      ro: 'Londra',
      kn: 'ಲಂಡನ್',
      tg: 'Лондон',
      gd: 'Lunnainn',
      te: 'లండన్',
      io: 'London',
      hi: 'लंदन',
      is: 'London',
      ht: 'Lonn',
      et: 'London',
      na: 'London',
      ay: 'London',
    },
    lat: 51.5073219,
    lon: -0.1276474,
    country: 'GB',
    state: 'England',
  },
  {
    name: 'City of London',
    local_names: {
      ko: '시티 오브 런던',
      he: 'הסיטי של לונדון',
      en: 'City of London',
      pt: 'Cidade de Londres',
      hi: 'सिटी ऑफ़ लंदन',
      ur: 'لندن شہر',
      lt: 'Londono Sitis',
      uk: 'Лондонське Сіті',
      zh: '倫敦市',
      fr: 'Cité de Londres',
      es: 'City de Londres',
      ru: 'Сити',
    },
    lat: 51.5156177,
    lon: -0.0919983,
    country: 'GB',
    state: 'England',
  },
  {
    name: 'London',
    local_names: {
      ar: 'لندن',
      hy: 'Լոնտոն',
      yi: 'לאנדאן',
      oj: 'Baketigweyaang',
      fa: 'لندن',
      iu: 'ᓚᓐᑕᓐ',
      th: 'ลอนดอน',
      el: 'Λόντον',
      he: 'לונדון',
      ko: '런던',
      cr: 'ᓬᐊᐣᑕᐣ',
      lv: 'Landona',
      en: 'London',
      bn: 'লন্ডন',
      be: 'Лондан',
      lt: 'Londonas',
      fr: 'London',
      ru: 'Лондон',
      ga: 'Londain',
      ja: 'ロンドン',
      ka: 'ლონდონი',
      ug: 'لوندۇن',
    },
    lat: 42.9832406,
    lon: -81.243372,
    country: 'CA',
    state: 'Ontario',
  },
  {
    name: 'Chelsea',
    local_names: {
      ru: 'Челси',
      pl: 'Chelsea',
      zh: '車路士',
      he: "צ'לסי",
      it: 'Chelsea',
      ga: 'Chelsea',
      hu: 'Chelsea',
      eu: 'Chelsea',
      af: 'Chelsea, Londen',
      el: 'Τσέλσι',
      tr: 'Chelsea, Londra',
      ar: 'تشيلسي',
      ja: 'チェルシー',
      de: 'Chelsea',
      az: 'Çelsi',
      no: 'Chelsea',
      es: 'Chelsea',
      sh: 'Chelsea, London',
      en: 'Chelsea',
      ko: '첼시',
      sv: 'Chelsea, London',
      nl: 'Chelsea',
      sk: 'Chelsea',
      vi: 'Chelsea, Luân Đôn',
      pt: 'Chelsea',
      et: 'Chelsea',
      hi: 'चेल्सी, लंदन',
      uk: 'Челсі',
      da: 'Chelsea',
      ur: 'چیلسی، لندن',
      id: 'Chelsea, London',
      fa: 'چلسی',
      fr: 'Chelsea',
    },
    lat: 51.4875167,
    lon: -0.1687007,
    country: 'GB',
    state: 'England',
  },
]

export const handlers = [
  rest.get(
    'https://api.openweathermap.org/data/2.5/weather',
    (request, response, context) => {
      // Example of some error from the API
      if (request.url.searchParams.get('lat') === 'Infinity') {
        return response(context.status(422))
      }

      return response(context.status(200), context.json(weatherData))
    },
  ),
  rest.get(
    'https://api.openweathermap.org/geo/1.0/direct',
    (request, response, context) => {
      return response(context.status(200), context.json(directs))
    },
  ),
]
